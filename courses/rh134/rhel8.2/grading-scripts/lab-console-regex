#!/bin/bash
#
# Copyright 2019 Red Hat, Inc.
#
# NAME
#     lab-console-regex - grading script for RH134 Using grep with logs
#
# SYNOPSIS
#     lab-template {start|grade|finish}
#
#        start   - prepare the system for starting the lab
#        grade   - perform evaluation steps on the system
#        finish  - perform post-lab cleanup
#
# DESCRIPTION
#     This script, based on singular argument, either does start, grading,
#     or finish for the particular lab of awesomeness.
#
# CHANGELOG
#   * Tue May 28 2019 Michael Phillips <miphilli@redhat.com>
#   - modified the pad lines for uniqueness based on End-to-End QA
#     feedback
#   * Thu Mar 14 2019 Fiona Allen <fallen@redhat.com>
#   - original code

PATH=/usr/bin:/bin:/usr/sbin:/sbin

# Initialize and set some variables
run_as_root='true'
target='servera'
reqd_package='postfix'
user1='postdrop'
user2='postfix'
password='/etc/passwd'
shadow='/etc/shadow'
group1='postdrop'
group2='postfix'
group_file='/etc/group'

# This defines which subcommands are supported (start, grade, etc.).
# Corresponding lab_COMMAND functions must be defined.
declare -a valid_commands=(start grade finish)


function lab_start {

  print_header 'Starting lab.'

  print_line "Preparing ${target} for lab exercise work:"
  print_line
  host_reachable ${target}

  # Check that required package(s) is/are installed.
  pad " · Ensuring package is installed: ${reqd_package}"
  if  ${ssh} ${target} "rpm -q --quiet ${reqd_package}"
  then
   print_SUCCESS
   elif  ${ssh} ${target} "yum -y install ${reqd_package}"
   then
     print_SUCCESS
     else
       print_FAIL
  fi

  pad " · Starting ${reqd_package}"
  if ${ssh} ${target} "systemctl enable --now postfix"
    then
      print_SUCCESS
    else
      print_FAIL
  fi
}

function lab_finish {

  print_header "Cleaning up the lab on ${target}:"
  host_reachable ${target}

  pad " · Removing package ${reqd_package}: "
  if ! ${ssh} ${target} "rpm -q --quiet ${reqd_package}"
  then
   print_SUCCESS
   elif
     ${ssh} ${target} "yum -y remove ${reqd_package}" 
     then
       print_SUCCESS
     else
       print_FAIL
   fi

   pad " · Removing user ${user1}: "
   if ! ${ssh} ${target} "grep ${user1} ${passwd} ${shadow}"
   then
     print_SUCCESS
     elif 
       ${ssh} ${target} userdel -rf ${user1}
       then
         print_SUCCESS
       else
         print_FAIL
   fi

   pad " · Removing user ${user2}: "
   if ! ${ssh} ${target} "grep ${user2} ${passwd} ${shadow}"
   then
     print_SUCCESS
     elif
       ${ssh} ${target} userdel -rf ${user2}
       then
         print_SUCCESS
       else
         print_FAIL
   fi
    
   pad " · Removing group ${group1}: "
   if ! ${ssh} ${target} "grep ${group1} ${group_file}" 
   then
     print_SUCCESS
     elif
       ${ssh} ${target} groupdel ${group1}
         then
           print_SUCCESS
         else
           print_FAIL
    fi
    
    pad " · Removing group ${group2}: "
    if ! ${ssh} ${target} "grep ${group2} ${group_file}"
    then 
      print_SUCCESS
      elif
        ${ssh} ${target} groupdel ${group2}
          then 
            print_SUCCESS
          else
            print_FAIL
    fi



  
  print_line

  print_line 'Lab finished.'
  print_line
}

############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"
