#!/bin/bash
#
# Copyright 2019 Red Hat, Inc.
#
# NAME
#     lab-storage-swap - grading script for RH134 Managing Swap Space
#                        guided exercise
#
# SYNOPSIS
#     lab-storage-swap {start|finish}
#
#        start   - prepare the system for starting the lab
#        finish  - perform post-lab cleanup
#
# DESCRIPTION
#     This script, based on singular argument, either does start or finish for
#     the Managing Swap Space guided exercise.
#
# CHANGELOG
#   * Wed Mar 20 2019 Herve Quatremain <hquatrem@redhat.com>
#   - original code


PATH=/usr/bin:/bin:/usr/sbin:/sbin

# Initialize and set some variables
run_as_root='true'
target='servera'
second_disk_device='vdb'


# This defines which subcommands are supported (start, grade, etc.).
# Corresponding lab_COMMAND functions must be defined.
declare -a valid_commands=(start finish)


function lab_start {

  print_header 'Starting lab.'

  print_line "Preparing ${target} for lab exercise work:"
  print_line
  host_reachable ${target}

  pad " · Cleaning up the second disk on ${target}"
  for i in {5..1}
  do
    if ${ssh} ${target} "test -b /dev/${second_disk_device}$i"
    then
      ${ssh} ${target} "umount -l /dev/${second_disk_device}$i"
      ${ssh} ${target} "swapoff /dev/${second_disk_device}$i"
      ${ssh} ${target} "dd if=/dev/zero of=/dev/${second_disk_device}$i bs=512 count=10"
      ${ssh} ${target} "parted --script /dev/${second_disk_device} rm $i"
    fi
  done
  ${ssh} ${target} "sed -i -e '/\/archive/d' -e '/\/backup/d' /etc/fstab"
  ${ssh} ${target} "rmdir /archive /backup"
  ${ssh} ${target} "wipefs --all --force /dev/${second_disk_device}"
  ${ssh} ${target} "test -b /dev/${second_disk_device} && dd if=/dev/zero of=/dev/${second_disk_device} bs=1024 count=2048"
  print_SUCCESS

  pad " · Labeling the second disk on ${target}"
  if ${ssh} ${target} "parted --script /dev/${second_disk_device} mklabel gpt"
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  pad " · Creating a partition on the second disk on ${target}"
  if ${ssh} ${target} "parted --script /dev/${second_disk_device} mkpart data xfs 1MB 1001MB"
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  pad " · Saving /etc/fstab on ${target}"
  ${ssh} ${target} "test -f /var/tmp/fstab.ch06s04.GE || cp /etc/fstab /var/tmp/fstab.ch06s04.GE"
  print_SUCCESS

  print_line
}

function lab_finish {

  print_header "Cleaning up the lab on ${target}:"
  host_reachable ${target}

  pad " · Cleaning up the second disk on ${target}"
  for i in {5..1}
  do
    if ${ssh} ${target} "test -b /dev/${second_disk_device}$i"
    then
      ${ssh} ${target} "umount -l /dev/${second_disk_device}$i"
      ${ssh} ${target} "swapoff /dev/${second_disk_device}$i"
      ${ssh} ${target} "dd if=/dev/zero of=/dev/${second_disk_device}$i bs=512 count=10"
      ${ssh} ${target} "parted --script /dev/${second_disk_device} rm $i"
    fi
  done
  ${ssh} ${target} "rmdir /archive /backup"
  ${ssh} ${target} "wipefs --all --force /dev/${second_disk_device}"
  ${ssh} ${target} "test -b /dev/${second_disk_device} && dd if=/dev/zero of=/dev/${second_disk_device} bs=1024 count=2048"
  print_SUCCESS

  pad " · Restoring /etc/fstab on ${target}"
  ${ssh} ${target} "cp /var/tmp/fstab.ch06s04.GE /etc/fstab && rm -f /var/tmp/fstab.ch06s04.GE"
  print_SUCCESS

  print_line
  print_line 'Lab finished.'
  print_line
}

############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"
