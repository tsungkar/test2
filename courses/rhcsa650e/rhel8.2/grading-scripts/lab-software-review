#!/bin/bash
#
# Copyright 2019 Red Hat, Inc.
#
# NAME
#     lab-software-rpm - Start script for Lab Installing and Updating Software Packages
#
# SYNOPSIS
#     lab-software-rpm {start|finish}
#
#        start   - prepare the system for starting the lab
#        finish  - perform post-lab cleanup
# DESCRIPTION
#     This script verifies servera is accessible, downloads the package,
#     remove any lab artifacts.
#
# CHANGELOG
#   * Fri Mar 07 2019 Snehangshu Karmakar <snehk@redhat.com>
#   - original code

PATH=/usr/bin:/bin:/usr/sbin:/sbin

# Initialize and set some variables
run_as_root='true'
target='serverb'
content_rhel_ver='rhel8.2'
reqd_package='yum cups'
loc="http://content.example.com/${content_rhel_ver}/x86_64/rhcsa-practice/rht/Packages/"
pkgname='rhcsa-script'
rpmname='rhcsa-script-1.0.0-1.noarch.rpm'
cups='cups.x86_64'
pack1="xsane-gimp"
pack2="httpd"
repo="/etc/yum.repos.d/errata.repo"
module1='httpd'
module1_1='2.4'

# This defines which subcommands are supported (start, grade, etc.).
# Corresponding lab_COMMAND functions must be defined.
declare -a valid_commands=(start grade finish)


function lab_start {
  print_header 'Starting lab.'

  print_line "Preparing ${target} for lab exercise work:"
  print_line
  # Check that target host is reachable.
  pad " · Verifying server is reachable: ${target}"
  host_reachable ${target}
  print_SUCCESS

  #Download the package
  pad " · Downloading the package: ${target}"
  if ${ssh} ${target} "su - student -c 'curl -s -f -o ${rpmname} ${loc}/${rpmname}'"; then
    print_SUCCESS
  else
    print_FAIL
  fi

  # Check that required package(s) is/are installed.
  pad " · Verifying package: ${reqd_package}"
  cmd1="yum -y install ${reqd_package}"
  if  ${ssh} ${target} "rpm -q --quiet ${reqd_package}"; then
    print_SUCCESS
  elif  ${ssh} ${target} "${cmd1}"; then
    print_SUCCESS
  else
    print_FAIL
  fi

  pad " · Verifying exercise package is not installed: ${target}"
  cmd1="yum -y remove ${pkgname}"
  if  ! ${ssh} ${target} "rpm -q --quiet ${pkgname}"; then
    ${ssh} ${target} "touch /etc/motd"
    print_SUCCESS
  else
    ${ssh} ${target} "${cmd1}"
    ${ssh} ${target} "rm -rf /home/student/opt"
    ${ssh} ${target} "touch /etc/motd"
    print_SUCCESS
  fi

  print_line

}

function lab_grade {

  print_line

  pad " · Verifying that repo exists: "
  if ${ssh} ${target} [ -f $repo ]
  then
    print_PASS
  else
    print_FAIL
  fi

  pad " · Verifying that ${pack1} is installed: "
  if ${ssh} ${target} "rpm -q --quiet ${pack1}"
  then
    print_PASS
  else
    print_FAIL
  fi

  pad " · Verifying that ${module1} is installed: "
  if ${ssh} ${target} "yum module list --installed | grep ${module1_1}"
  then
    print_PASS
  else
    print_FAIL
  fi

  pad " · Verifying CUPS is removed: "
  if ${ssh} ${target} "rpm -q --quiet ${cups}"
  then
    print_FAIL
  else
    if ! ${ssh} ${target} "rpm -q --quiet ${cups}"
    then
     print_PASS
     fi
  fi

  pad " · Verifying exercise package is installed: ${target}"
  if  ! ${ssh} ${target} "rpm -q --quiet ${pkgname}"
  then
    print_FAIL
  else
    if ${ssh} ${target} "rpm -q --quiet ${pkgname}"
    then
      print_PASS
    fi
  fi

  # Overall grade
  print_line
  pad 'Overall lab grade'
  if [[ ${fail_count} -eq 0 ]]
  then
    print_PASS
  else
    print_FAIL
  fi

  print_line
}

function lab_finish {

  print_header "You have completed attempting the guided exercise."
  host_reachable ${target}

  pad " · Removing repo: ${repo} "
  if ${ssh} ${target} "sudo rm ${repo}"
  then
    print_SUCCESS
  else
    if ${ssh} ${target} [ ! -f $repo ]
    then
      print_SUCCESS
    else
    print_FAIL
    fi
  fi

  pad " · Removing package: ${pkgname}"
  cmd1="rpm -e  ${pkgname}"
  if  ! ${ssh} ${target} "rpm -q --quiet ${pkgname}"; then
    print_SUCCESS
  else
    ${ssh} ${target} "${cmd1}"
    print_SUCCESS
  fi

  pad " · Removing files: ${target}"
  cmd1="rm -rf /home/student/opt /etc/motd"
  if  ${ssh} ${target} "${cmd1}"; then
    print_SUCCESS
  fi

  pad " · Remove package: ${pack1}"
  if ${ssh} ${target} "sudo yum -y remove ${pack1}"
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  pad " · Remove module package: ${module1}"
  if ! ${ssh} ${target} "yum module list --installed |grep ${module1_1}"
  then
    print_SUCCESS
  elif ${ssh} ${target} "yum -y remove @${module1}:${module1_1}"
    then
      print_SUCCESS
   else
     print_FAIL
  fi

  pad " · Reinstall ${cups}: "
  if ${ssh} ${target} "sudo yum -y install ${cups}"
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  print_line
  print_line 'Lab finished.'
  print_line
}


############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"

